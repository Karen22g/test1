import streamlit as st
import pandas as pd
import plotly.express as px
import seaborn as sns
 
# Cargar el dataset
st.title("ğŸ“Š Tablero Gerencial - AnÃ¡lisis de Iris")
df = sns.load_dataset("iris")
 
# Sidebar con filtros
st.sidebar.header("Filtros")
especie = st.sidebar.multiselect("Selecciona la especie", df["species"].unique(), default=df["species"].unique())
 
df_filtered = df[df["species"].isin(especie)]
 
# KPIs
st.subheader("ğŸ“Œ MÃ©tricas Clave")
st.metric(label="ğŸŒ± NÃºmero de Registros", value=df_filtered.shape[0])
st.metric(label="ğŸŒ¿ Promedio Sepal Length", value=round(df_filtered["sepal_length"].mean(), 2))
st.metric(label="ğŸŒ¸ Promedio Petal Width", value=round(df_filtered["petal_width"].mean(), 2))
 
# GrÃ¡fico de dispersiÃ³n interactivo
st.subheader("ğŸ“ˆ RelaciÃ³n entre Largo y Ancho de PÃ©talos")
fig = px.scatter(df_filtered, x="petal_length", y="petal_width", color="species", 
                 size="sepal_length", hover_data=["sepal_width"], 
                 title="DistribuciÃ³n de TamaÃ±o de los PÃ©talos")
st.plotly_chart(fig)
 
# GrÃ¡fico de radar
st.subheader("ğŸ“Š ComparaciÃ³n Promedio por Especie")
df_radar = df_filtered.groupby("species").mean().reset_index()
fig_radar = px.line_polar(df_radar, r=df_radar.drop(columns="species").mean(axis=1),
                          theta=["sepal_length", "sepal_width", "petal_length", "petal_width"],
                          line_close=True, color=df_radar["species"], title="Perfil Promedio de Cada Especie")
st.plotly_chart(fig_radar)
 
# Tabla de datos interactiva
st.subheader("ğŸ“„ Datos Filtrados")
st.dataframe(df_filtered)
